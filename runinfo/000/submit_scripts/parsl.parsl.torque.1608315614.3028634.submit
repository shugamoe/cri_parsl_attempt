#!/bin/bash

#PBS -l mem=2gb
#PBS -S /bin/bash
#PBS -N parsl.parsl.torque.1608315614.3028634
#PBS -m n
#PBS -l walltime=01:00:00
#PBS -l nodes=1:ppn=1
#PBS -o /gpfs/data/gao-lab/Julian/gaolab_hub/projects/prs_aa_ancestry/cri/sbayesr_parsl/runinfo/000/submit_scripts/parsl.parsl.torque.1608315614.3028634.submit.stdout
#PBS -e /gpfs/data/gao-lab/Julian/gaolab_hub/projects/prs_aa_ancestry/cri/sbayesr_parsl/runinfo/000/submit_scripts/parsl.parsl.torque.1608315614.3028634.submit.stderr

module load gcc/6.2.0; module load plink/2.0; module load python/3.8.1; python3 -c 'import parsl; print(parsl.__version__)'

export JOBNAME="parsl.parsl.torque.1608315614.3028634"

set -e
export CORES=$(getconf _NPROCESSORS_ONLN)
echo "Found cores : $CORES"
WORKERCOUNT=1
FAILONANY=0
RET=0

declare -a EXITCODES

FAILONANY() {
    for I in $(seq 1 1 $WORKERCOUNT); do
        if [ "$EXITCODES[$I]" != "0" ]; then
            RET=1
            break
        fi
    done
}

FAILONALL() {
    RET=1
    for I in $(seq 1 1 $WORKERCOUNT); do
        if [ "$EXITCODES[$I]" == "0" ]; then
            RET=0
            break
        fi
    done
}

CMD() {
process_worker_pool.py   -a 10.50.178.250 -p 0 -c 1 -m None --poll 10 --task_port=54728 --result_port=54252 --logdir=/gpfs/data/gao-lab/Julian/gaolab_hub/projects/prs_aa_ancestry/cri/sbayesr_parsl/runinfo/000/gardner_plink_1ppn --block_id=0 --hb_period=30  --hb_threshold=120 
EXITCODES[$1]=$?
}
for COUNT in $(seq 1 1 $WORKERCOUNT); do
    echo "Launching worker: $COUNT"
    CMD $COUNT &
done

wait

if [ "$FAILONANY" == "1" ]; then
    FAILONANY
else
    FAILONALL
fi
echo "All workers done"
exit $RET


